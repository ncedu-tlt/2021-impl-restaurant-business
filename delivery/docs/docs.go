// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"github.com/swaggo/swag"
)

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
		"/orders/all": {
            "get": {
                "description": "Returns list of all orders",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "FindAllOrders",
                "operationId": "find-all-orders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Order"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "500": {
                        "description": "Internal Server Error",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    }
                }
            }
        },
		"/orders/order/id={id}": {
            "get": {
                "description": "Returns order info by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "FindOrderById",
                "operationId": "find-orders-by-id",
 				"parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Order"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "404": {
                        "description": "Not Found",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "500": {
                        "description": "Internal Server Error",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    }
                }
            }
        },
        "/orders/new": {
            "post": {
                "description": "Create new order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "CreateOrder",
                "operationId": "create-order",
                "parameters": [
                    {
                        "description": "orderInputOnCreate",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.orderInputOnCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "500": {
                        "description": "Internal Server Error",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    }
                }
            }
        },
		"/order/orders/update/id={id}": {
            "patch": {
                "description": "Updates order by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "UpdateOrderById",
                "operationId": "update-order-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "orderInputOnUpdate",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.orderInputOnUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "404": {
                        "description": "Not Found",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "500": {
                        "description": "Internal Server Error",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    }
                }
            }
        },
        "/orders/order/delete/id={id}": {
            "delete": {
                "description": "Deletes order info by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Order"
                ],
                "summary": "DeleteOrderById",
                "operationId": "delete-order-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "500": {
                        "description": "Internal Server Error",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    }
                }
            }
        },



        "/statuses/all": {
            "get": {
                "description": "Returns list of all order statuses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderStatus"
                ],
                "summary": "FindAllOrderStatuses",
                "operationId": "find-all-order-statuses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.OrderStatus"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "500": {
                        "description": "Internal Server Error",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    }
                }
            }
        },
        "/statuses/status/id={id}": {
            "get": {
                "description": "Returns order status by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderStatus"
                ],
                "summary": "FindOrderStatusById",
                "operationId": "find-order-status-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.OrderStatus"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "500": {
                        "description": "Internal Server Error",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    }
                }
            }
        },
        "/statuses/new": {
            "post": {
                "description": "Creates new order status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderStatus"
                ],
                "summary": "CreateOrderStatus",
                "operationId": "create-order-status",
                "parameters": [
                    {
                        "description": "orderStatusInput",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.orderStatusInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "500": {
                        "description": "Internal Server Error",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    }
                }
            }
        },
        "/statuses/status/update/id={id}": {
            "patch": {
                "description": "Updates order status by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderStatus"
                ],
                "summary": "UpdateOrderStatusById",
                "operationId": "update-order-status-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "orderStatusInput",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.orderStatusInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "404": {
                        "description": "Not Found",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "500": {
                        "description": "Internal Server Error",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    }
                }
            }
        },
		"/statuses/status/delete/id={id}": {
            "delete": {
                "description": "Deletes order status by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderStatus"
                ],
                "summary": "DeleteOrderStatusById",
                "operationId": "delete-order-status-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "500": {
                        "description": "Internal Server Error",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    }
                }
            }
        },



        "/types/all": {
            "get": {
                "description": "Returns list of all payment types",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PaymentType"
                ],
                "summary": "FindAllPaymentTypes",
                "operationId": "find-all-payment-types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.PaymentType"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "500": {
                        "description": "Internal Server Error",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    }
                }
            }
        },
		"/types/type/id={id}": {
            "get": {
                "description": "Returns payment type by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PaymentType"
                ],
                "summary": "FindPaymentTypeById",
                "operationId": "find-payment-type-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PaymentType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "500": {
                        "description": "Internal Server Error",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    }
                }
            }
        },
        "/types/new": {
            "post": {
                "description": "Creates new payment type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PaymentType"
                ],
                "summary": "CreatePaymentType",
                "operationId": "create-payment-type",
                "parameters": [
                    {
                        "description": "paymentTypeInput",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.paymentTypeInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "500": {
                        "description": "Internal Server Error",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    }
                }
            }
        },
        "/types/type/update/id={id}": {
            "patch": {
                "description": "Updates payment type by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PaymentType"
                ],
                "summary": "UpdatePaymentTypeById",
                "operationId": "update-payment-type-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "paymentTypeInput",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.paymentTypeInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "404": {
                        "description": "Not Found",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "500": {
                        "description": "Internal Server Error",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    }
                }
            }
        },
		"/types/type/delete/id={id}": {
            "delete": {
                "description": "Deletes payment type by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PaymentType"
                ],
                "summary": "DeletePaymentTypeById",
                "operationId": "delete-payment-type-by-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "500": {
                        "description": "Internal Server Error",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    }
                }
            }
        },



		"/dishes/all/id={id}": {
            "get": {
                "description": "Returns list of all OrderToDish relations",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderToDish"
                ],
                "summary": "FindDishesByOrderId",
                "operationId": "find-all-orders-to-dish",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.OrderToDish"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "500": {
                        "description": "Internal Server Error",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    }
                }
            }
        },
        "/dishes/new": {
            "post": {
                "description": "Create new OrderToDish relation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderToDish"
                ],
                "summary": "CreateOrderToDish",
                "operationId": "create-order-to-dish",
                "parameters": [
                    {
                        "description": "orderToDishInputOnCreate",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.orderToDishInputOnCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "500": {
                        "description": "Internal Server Error",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    }
                }
            }
        },
		"/dishes/dish/update/order_id={order_id}/dish_id={dish_id}": {
            "patch": {
                "description": "Updates OrderToDish relation by order id and dish id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderToDish"
                ],
                "summary": "UpdateDishByOrderIdAndDishId",
                "operationId": "update-order-to-dish",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "order_id",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "dish_id",
                        "name": "dish_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "orderToDishInputOnUpdate",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/service.orderToDishInputOnUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "404": {
                        "description": "Not Found",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "500": {
                        "description": "Internal Server Error",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    }
                }
            }
        },
        "/dishes/dish/delete/order_id={order_id}/dish_id={dish_id}": {
            "delete": {
                "description": "Deletes order to dish relation by order id and dish id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderToDish"
                ],
                "summary": "DeleteDishByOrderIdAndDishId",
                "operationId": "delete-order-to-dishes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "order_id",
                        "name": "order_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "dish_id",
                        "name": "dish_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    },
                    "500": {
                        "description": "Internal Server Error",
						"schema": {
							"$ref": "#/definitions/errorResponse"
						}
                    }
                }
            }
        }



    },
    "definitions": {
        "model.Order": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cost": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "order_status": {
                    "$ref": "#/definitions/model.OrderStatus"
                },
                "payment_status": {
                    "type": "boolean"
                },
                "payment_type": {
                    "$ref": "#/definitions/model.PaymentType"
                }
            }
        },
        "model.OrderStatus": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.OrderToDish": {
            "type": "object",
            "properties": {
                "dish_id": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                }
            }
        },
        "model.PaymentType": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "service.orderInputOnCreate": {
            "type": "object",
            "required": [
                "address",
                "cost",
                "order_status_id",
                "payment_status",
                "payment_type_id"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "cost": {
                    "type": "integer"
                },
                "order_status_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "payment_status": {
                    "type": "boolean"
                },
                "payment_type_id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "service.orderInputOnUpdate": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "cost": {
                    "type": "integer"
                },
                "order_status_id": {
                    "type": "integer",
                    "minimum": 1
                },
                "payment_status": {
                    "type": "boolean"
                },
                "payment_type_id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "service.orderStatusInput": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "service.orderToDishInputOnCreate": {
            "type": "object",
            "required": [
                "dish_id",
                "order_id",
                "quantity"
            ],
            "properties": {
                "dish_id": {
                    "type": "integer"
                },
                "order_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "service.orderToDishInputOnUpdate": {
            "type": "object",
            "required": [
                "quantity"
            ],
            "properties": {
                "quantity": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "service.paymentTypeInput": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
		"errorResponse": {
			"type": "object",
			"properties": {
                "message": {
                    "type": "string"
                }
            }
		}
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "impl-crm-delivery.herokuapp.com",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "impl-crm-delivery",
	Description:      "Delivery microservice's API for CRM",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
